.btn {

    /* link here is a pseudo class. Pseudo classes are special states of a selector. We use pseudo classes to style elements under a special condition */
    /* Other examples might include :hover, :first-child, :checked */
    &:link,
    &:visited {
        text-transform: uppercase;
        text-decoration: none;
        padding: 1.5rem 4rem; /* 15px top/bottom 40px left/right*/
        display: inline-block; /* applied so that padding doesn't cause overlap with other elements.
                                Also inline-block elements are treated as text so this is centered with text-center on the .textbox */
        border-radius: 10rem;
        transition: all .2s; /* .2s transition will be applied on all pseudoclass states (hover, active) */
        position: relative;
        font-size: $default-font-size;
    }

    &--white {
        background-color: $color-white;
        color: $color-grey-dark;

        &::after {
            background-color: $color-white;
            color: $color-grey-dark;
        }
    }

    &--green {
        background-color: $color-primary;
        color: $color-white;

        &::after {
            background-color: $color-primary;
        }
    }

    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 1rem 2rem rgba($color-black, .2); /* 0 shadow offset in x direction. 10px offset in y. 20px blur (makes shadow larger) */
    
        /* when we want hover the button, we apply these styles to the 'after' pseudoelement */
        &::after {
            transform: scaleX(1.4) scaleY(1.6); /* scales 1.4 times original size on x and 1.6 on y */
            opacity: 0;
        }
    }
    
    &:active {
        transform: translateY(-1px);
        box-shadow: 0 .5rem 1rem rgba($color-black, .2); /* in relation to hover pseudoclass, this makes the button look like it's being pushed down as it's "closer" to the page */
    }
    
    /* after here is a pseudo element. The trick here is adding a button which looks like the actual button and hide it behind it */
    &::after {
        content: "";
        display: inline-block;
        height: 100%; /* pseudo element is basically treated as a child element of the base element */
        width: 100%;
        border-radius: 10rem;
    
        /* positions the pseudoelement behind the button */
        position: absolute;
        top: 0;
        left: 0;
        z-index: -1;
        transition: all .4s;
    }
    
    &--animated {
        animation: moveInBottom .5s ease-out .75s;
        animation-fill-mode: backwards; /* applies the animations of the 0% keyframes before the animation starts */
    }

}

.btn-text {
    &:link,
    &:visited {
        font-size: $default-font-size;
        color: $color-primary;
        display: inline-block;
        text-decoration: none;
        border-bottom: 1px solid $color-primary;
        padding: 3px;
        transition: all .2s;
    }

    &:hover {
        background-color: $color-primary;
        color: $color-white;
        box-shadow: 0 1rem 2rem rgba($color-black, .15);
        transform: translateY(-2px);
    }

    &:active {
        box-shadow: 0 .5rem 1rem rgba($color-black, .15);
        transform: translateY(0);
    }
}